openapi: 3.0.3
info:
  title: API Hands_on
  version: '1.0'
  license:
    name: kazuki_ito
servers:
  - url: http://localhost:8000/api
    description: 8001のAPIサーバーテスト
  - url: http://localhost:8001/api
    description: 8001のAPIサーバー
  - url: http://localhost:8002/api
    description: 8001のAPIサーバー
  - url: http://localhost:8003/api
    description: 8001のAPIサーバー
paths:
  /health-check:
    get:
      summary: test for first api specification
      security: []
      tags:
        - health-check
      responses:
        '200':
          description: OK
  /user:
    get:
      tags:
        - user
      summary: get user list
      security: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /top:
    post:
      tags:
        - top
      summary: xxxxxxxxxxxxxxxx
      description: yyyyyyyyyyyyyyyyyy
      security: []
      requestBody:
        description: sample
        content:
          application/json:
            schema:
              type: object
              properties:
                announcements:
                  $ref: '#/components/schemas/announcement'
                recentReports:
                  $ref: '#/components/schemas/recentReports'
                reportsOfFollowingUser:
                  $ref: '#/components/schemas/reportsOfFollowingUser'
      responses:
        '200':
          description: OK
  /getDepartments:
    get:
      tags:
        - department
      summary: get department list
      description: get department list
      security: []
      requestBody:
        description: you need requestBody to fetch department list
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  department_id:
                    type: integer
                    format: int64
                    example: 1
                  department_name:
                    type: string
                    example: web
                  retired_date:
                    type: string
                    format: date
                    description: the day where user was retired
                    example: xxxx-yy-mm
      responses:
        '200':
          description: OK
components:
  securitySchemes:
    BeareAuth:
      type: http
      scheme: bearer
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        photos:
          type: array
          items:
            type: string
          example:
            - sample
            - example
    announcement:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        photos:
          type: array
          items:
            type: string
          example:
            - sample
            - example
    recentReports:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        photos:
          type: array
          items:
            type: string
          example:
            - sample
            - example
    reportsOfFollowingUser:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        photos:
          type: array
          items:
            type: string
          example:
            - sample
            - example
