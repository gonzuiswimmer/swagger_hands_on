openapi: 3.0.3
info:
  title: API Admin
  version: '1.0'
  license:
    name: kazuki_ito
    url: https://gonzuiswimmer.github.io/swagger_hands_on/admin/
servers:
  - url: http://localhost:8000/api
    description: 8001のAPIサーバーテスト
  - url: http://localhost:8001/api
    description: 8001のAPIサーバー
  - url: http://localhost:8002/api
    description: 8001のAPIサーバー
  - url: http://localhost:8003/api
    description: 8001のAPIサーバー
  - url: http://localhost:8180/admin-mock/api
    description: adminのモックサーバー
  - url: http://localhost:8180/admin-agent-mock/api
    description: admin-agentのモックサーバー
  - url: http://localhost:8180/order-mock/api
    description: orderのモックサーバー
paths:
  /health-check:
    get:
      summary: test for first api specification
      security: []
      tags:
        - health-check
      responses:
        '200':
          description: OK
        '400':
          description: Error
  /user:
    get:
      tags:
        - user
      summary: get user list
      security: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Error
  /top:
    post:
      tags:
        - top
      summary: top画面を表示するときに送るapi情報
      description: top画面を表示するときに送るapi情報
      security: []
      requestBody:
        description: sample
        content:
          application/json:
            schema:
              type: array
              items:
                oneOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/Announcement'
                  - type: array
                    items:
                      $ref: '#/components/schemas/recentMonthlyReports'
                  - type: array
                    items:
                      $ref: '#/components/schemas/reportsOfFollowingUser'
      responses:
        '200':
          description: OK
        '400':
          description: Error
  /getDepartments:
    get:
      tags:
        - department
      summary: get department list
      description: get department list
      security: []
      requestBody:
        description: you need requestBody to fetch department list
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  department_id:
                    type: integer
                    format: int64
                    example: 1
                  department_name:
                    type: string
                    example: web
                  retired_date:
                    type: string
                    format: date
                    description: the day where user was retired
                    example: xxxx-yy-mm
      responses:
        '200':
          description: OK
        '400':
          description: Error
components:
  securitySchemes:
    BeareAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        employee_code:
          type: string
        encrypted_email:
          type: string
        entry_date:
          type: string
          format: date
        beginner_flg:
          type: boolean
        deleted_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        encrypted_password:
          type: string
        reset_password_token:
          type: string
        reset_password_sent_at:
          type: string
          format: date-time
        remember_created_at:
          type: string
          format: date-time
        sign_in_count:
          type: number
        current_sign_in_at:
          type: string
          format: date-time
        last_sign_in_at:
          type: string
          format: date-time
        current_sign_in_ip:
          type: string
        last_sign_in_ip:
          type: string
        faled_attempts:
          type: number
        unlock_token:
          type: string
        locked_at:
          type: string
          format: date-time
        gender:
          type: number
        email:
          type: string
        department_id:
          type: number
        email_verified_at:
          type: string
          format: date-time
        tenant_id:
          type: number
    Announcement:
      type: object
      properties:
        id:
          type: number
          example: 1
        title:
          type: string
          example: テスト記事タイトル
        body:
          type: string
          example: テスト記事の見出し
        published_date:
          type: string
          format: date
          example: '2025-01-26'
        created_at:
          type: string
          format: date-time
          example: '2025-04-26T17:32:28Z'
        updated_at:
          type: string
          format: date-time
          example: '2025-04-26T17:32:28Z'
    Tag:
      type: object
      properties:
        name:
          type: string
          example: Vue.js
    recentMonthlyReports:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        id:
          type: number
          example: 21
        user_id:
          type: number
          example: 13
        target_month:
          type: string
          format: date-time
          example: '2025-04-26T17:32:28Z'
        project_summary:
          type: string
          example: 概要
        business_content:
          type: string
          example: 内容
        looking_back:
          type: string
          example: 振り返り
        next_month_goals:
          type: string
          example: 来月の目標
        shipped_at:
          type: string
          format: date-time
          example: '2025-04-26T17:32:28Z'
        created_at:
          type: string
          format: date-time
          example: '2025-04-26T17:32:28Z'
        updated_at:
          type: string
          format: date-time
          example: '2025-04-26T17:32:28Z'
        assign:
          type: integer
          enum:
            - 1
            - 2
          description: |
            * 1 - 待機中 * 2 - アサイン中
        is_deleted:
          type: boolean
          example: false
        comments_count:
          type: number
          example: 4
        likes_count:
          type: number
          example: 0
    reportsOfFollowingUser:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        id:
          type: number
          example: 21
        user_id:
          type: number
          example: 13
        target_month:
          type: string
          format: date-time
          example: '2025-04-26T17:32:28Z'
        project_summary:
          type: string
          example: 概要
        business_content:
          type: string
          example: 内容
        looking_back:
          type: string
          example: 振り返り
        next_month_goals:
          type: string
          example: 来月の目標
        shipped_at:
          type: string
          format: date-time
          example: '2025-04-26T17:32:28Z'
        created_at:
          type: string
          format: date-time
          example: '2025-04-26T17:32:28Z'
        updated_at:
          type: string
          format: date-time
          example: '2025-04-26T17:32:28Z'
        assign:
          type: integer
          enum:
            - 1
            - 2
          description: |
            * 1 - 待機中 * 2 - アサイン中
        is_deleted:
          type: boolean
          example: false
        comments_count:
          type: number
          example: 4
        likes_count:
          type: number
          example: 0
